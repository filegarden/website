@use "~/assets/styles/themes.scss";

// `base` includes styling for base components that should have the lowest
// priority.
@layer base;

* {
  box-sizing: border-box;
}

:root {
  height: 100%;
  font-family: var(--font-family);
  line-height: 1.2;
  word-break: break-word;

  -webkit-tap-highlight-color: transparent;
  -webkit-focus-ring-color: transparent;

  --font-family: system-ui, sans-serif;
  --font-family-monospace: ui-monospace, monospace;
  --color-brand: #309f76;
  --color-brand-2: #f6be6e;
}

body {
  margin: 0;
  height: 100%;

  background-color: var(--color-background);
  color: var(--color-text);
}

#__nuxt {
  // All ancestors of layout elements need 100% height so layouts are able to
  // have 100% height too.
  height: 100%;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-weight: normal;

  // Normalize font sizes and margins to fix inconsistency across browsers.
  font-size: 1em;
  margin: 1rem 0;
}

p,
li {
  line-height: 1.5;

  .long-text & {
    line-height: inherit;
  }
}

p:first-child {
  margin-top: 0;
}

p:last-child {
  margin-bottom: 0;
}

li {
  margin: 0.5em 0;

  .long-text & {
    margin: 0.75em 0;
  }
}

hr {
  margin: 1em 0;

  border: 1px solid currentColor;
  border-bottom-width: 0;

  color: var(--color-outline);
}

.long-text {
  line-height: 1.75;

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    line-height: 1.2;
    margin-bottom: 0.75em;
  }

  h1 {
    font-size: 2em;
  }

  h2 {
    font-size: 1.5em;
  }

  h3 {
    font-size: 1.25em;
  }

  p + {
    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
      margin-top: 1.5em;
    }
  }

  ol,
  ul {
    margin: 1.25em 0;
  }

  > :first-child {
    margin-top: 0;
  }

  > :last-child {
    margin-bottom: 0;
  }
}

.panel {
  // Let descendants be positioned relative to panels.
  position: relative;

  --border-radius-containing-block: 1rem;
  border-radius: var(--border-radius-containing-block);

  background-image: linear-gradient(
    135deg,
    var(--color-foreground-light),
    var(--color-foreground)
  );
  outline: 1px solid var(--color-outline);
  outline-offset: -1px;
  box-shadow: 0 4px 8px var(--color-shadow-large);

  text-align: left;
}

.frosted {
  backdrop-filter: blur(2rem);
}

:link:not(:active),
:visited:not(:active) {
  color: currentColor;
}

fieldset {
  margin: 0;
  border: none;
  padding: 0;
}

input,
textarea {
  font-size: 1em;
  font-family: var(--font-family);
  color: var(--color-input-text);

  vertical-align: middle;

  border-radius: 0.25rem;
  background-color: var(--color-input-background);
  // The outline should look as if it's outside the input, not inside the input.
  background-clip: padding-box;
  border: 1px solid var(--color-outline);

  // A transparent default outline makes transitions to other outlines smoother.
  outline: 1px solid transparent;
  // Overlay the outline on top of the border.
  outline-offset: -1px;

  $box-shadow-base: inset 0 1px 0.6rem -1px var(--color-shadow-medium);
  box-shadow: $box-shadow-base;

  overflow: hidden;

  transition:
    0.1s ease-out color,
    0.1s ease-out outline-color,
    0.1s ease-out box-shadow,
    0.1s ease-out opacity;

  &:hover:not(:disabled) {
    color: var(--color-input-text-hover);
    outline-color: var(--color-outline-hover);
    box-shadow:
      $box-shadow-base,
      0 0 0.5rem -0.25rem var(--color-glow);
  }

  &:active:not(:disabled),
  &:focus-visible:not(:disabled) {
    color: var(--color-input-text-active);
    outline-color: var(--color-outline-active);
    box-shadow:
      $box-shadow-base,
      0 0 0.5rem var(--color-glow);
  }

  &:disabled {
    opacity: 0.5;
  }
}

input {
  padding: 0 0.6rem;
  // Use line height instead of vertical padding so certain glyphs aren't cut
  // off.
  line-height: 2.4;
  white-space: nowrap;
}

textarea {
  padding: 0.5em;
  line-height: 1.5;
  white-space: pre-wrap;

  resize: vertical;
}

input:not([type]),
input[type="email"],
input[type="password"],
input[type="search"],
input[type="text"],
input[type="url"],
textarea {
  width: stretch;
}

input[type="checkbox"],
input[type="radio"] {
  appearance: none;
  cursor: pointer;

  width: 1.5em;
  height: 1.5em;
  padding: 0.125em;
  margin: 0.125em;

  display: inline-flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;

  &::before {
    pointer-events: none;

    opacity: 0;
    transition: 0.1s ease-out opacity;
  }

  &:checked::before {
    opacity: 1;
  }
}

input[type="checkbox"]::before {
  content: "âœ”";
}

input[type="radio"] {
  border-radius: 50%;

  &::before {
    content: "";

    background-color: currentColor;
    width: 50%;
    height: 50%;
    border-radius: inherit;
  }
}

code {
  font-family: var(--font-family-monospace);
  white-space: pre-wrap;
}

@keyframes fade-in {
  from {
    animation-timing-function: ease-out;
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
